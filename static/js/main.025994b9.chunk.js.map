{"version":3,"sources":["reducers/tasks.js","constants.js","reducers/filters.js","reducers/search.js","reducers/index.js","store.js","components/header/header.jsx","components/search-panel/search-panel.jsx","actions/index.js","components/todo-list-item/todo-list-item.jsx","components/todo-list/todo-list.jsx","components/panel-add-item/panel-add-item.jsx","components/app/app.jsx","index.js"],"names":["localStorageState","load","namespace","tasks","length","id","text","isCompleted","important","state","arguments","undefined","action","type","payload","toggle","param","map","item","Object","objectSpread","defineProperty","concat","toConsumableArray","filter","initialState","filters","searchText","search","combineReducers","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","save","store","createStore","reducer","header","react_default","a","createElement","className","SearchPanel","handleInput","_ref","value","target","_this","props","setState","handleStyle","filterName","filterChange","this","placeholder","onChange","onClick","Component","connect","TodoListItem","toggleImportant","toggleCompleted","deleteTask","classNames","aria-hidden","TodoList","filterTask","toLowerCase","indexOf","_this$props","searchedTasks","tasksList","key","todo_list_item_todo_list_item","addTask","Date","now","_useState","useState","_useState2","slicedToArray","inputText","setInputText","useEffect","document","addEventListener","handleAddTask","removeEventListener","e","App","components_header_header","search_panel_search_panel","todo_list_todo_list","panel_add_item_panel_add_item","React","ReactDOM","render","es","app_App","getElementById"],"mappings":"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","file":"static/js/main.025994b9.chunk.js","sourcesContent":["import { load } from 'redux-localstorage-simple';\r\n\r\nimport {\r\n  ADD_TASK,\r\n  DELETE_TASK,\r\n  TOGGLE_COMPLETED,\r\n  TOGGLE_IMPORTANT\r\n} from '../constants';\r\n\r\nlet localStorageState = load({ namespace: 'todos' });\r\n\r\nif (\r\n  !localStorageState ||\r\n  !localStorageState.tasks ||\r\n  !localStorageState.tasks.length\r\n) {\r\n  localStorageState.tasks = [\r\n    { id: 1, text: 'React', isCompleted: false, important: true },\r\n    { id: 2, text: 'Vue', isCompleted: false, important: false },\r\n    { id: 3, text: 'Angular', isCompleted: true, important: false }\r\n  ];\r\n}\r\n\r\nconst tasks = (state = localStorageState.tasks, action) => {\r\n  const { type, id, payload } = action;\r\n\r\n  const toggle = param => {\r\n    return state.map(item =>\r\n      item.id === id ? { ...item, [param]: !item[param] } : item\r\n    );\r\n  };\r\n\r\n  switch (type) {\r\n    case ADD_TASK:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: payload.id,\r\n          text: payload.text,\r\n          isCompleted: payload.isCompleted,\r\n          important: payload.important\r\n        }\r\n      ];\r\n\r\n    case DELETE_TASK:\r\n      return [...state].filter(item => item.id !== id);\r\n\r\n    case TOGGLE_COMPLETED:\r\n      return toggle('isCompleted');\r\n\r\n    case TOGGLE_IMPORTANT:\r\n      return toggle('important');\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasks;\r\n","export const ADD_TASK = 'ADD_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const TOGGLE_COMPLETED = 'TOGGLE_COMPLETED';\r\nexport const TOGGLE_IMPORTANT = 'TOGGLE_IMPORTANT';\r\nexport const FILTER_CHANGE = 'FILTER_CHANGE';\r\nexport const SEARCH = 'SEARCH';\r\n","import { FILTER_CHANGE } from '../constants';\r\n\r\nconst initialState = {\r\n  filter: 'All'\r\n};\r\n\r\nconst filters = (state = initialState, action) => {\r\n  const { type, filter } = action;\r\n\r\n  switch (type) {\r\n    case FILTER_CHANGE:\r\n      return { ...state, filter };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filters;\r\n","import { SEARCH } from '../constants';\r\n\r\nconst initialState = {\r\n  searchText: ''\r\n};\r\n\r\nconst search = (state = initialState, action) => {\r\n  const { type, text } = action;\r\n\r\n  switch (type) {\r\n    case SEARCH:\r\n      return { ...state, searchText: text };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default search;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport tasks from './tasks';\r\nimport filters from './filters';\r\nimport search from './search';\r\n\r\nexport default combineReducers({ tasks, filters, search });\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { save } from 'redux-localstorage-simple';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(save({ namespace: 'todos' }))\r\n);\r\nconst store = createStore(reducer, enhancer);\r\n\r\nexport default store;\r\n","import React from 'react';\r\n\r\nimport './header.css';\r\n\r\nconst header = () => {\r\n  return (\r\n    <header className='header'>\r\n      <h1>Todos</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default header;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { filterChange, search } from '../../actions';\r\n\r\nimport './search-panel.css';\r\n\r\nclass SearchPanel extends Component {\r\n  state = {\r\n    text: ''\r\n  };\r\n\r\n  handleInput = ({ target: { value } }) => {\r\n    this.props.search(value);\r\n    this.setState({\r\n      text: value\r\n    });\r\n  };\r\n\r\n  handleStyle = filterName => {\r\n    if (this.props.filter === filterName) {\r\n      return 'btn btn-info';\r\n    } else {\r\n      return 'btn btn-outline-secondary';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { filterChange } = this.props;\r\n\r\n    return (\r\n      <div className='input-group searchPanel'>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          placeholder='Search'\r\n          onChange={this.handleInput}\r\n          value={this.state.text}\r\n        />\r\n        <div className='input-group-append'>\r\n          <input\r\n            type='button'\r\n            className={this.handleStyle('All')}\r\n            value='All'\r\n            onClick={() => filterChange('All')}\r\n          />\r\n          <input\r\n            type='button'\r\n            className={this.handleStyle('Active')}\r\n            value='Active'\r\n            onClick={() => filterChange('Active')}\r\n          />\r\n          <input\r\n            type='button'\r\n            className={this.handleStyle('Complete')}\r\n            value='Complete'\r\n            onClick={() => filterChange('Complete')}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    filter: state.filters.filter\r\n  }),\r\n  { filterChange, search }\r\n)(SearchPanel);\r\n","import {\r\n  ADD_TASK,\r\n  DELETE_TASK,\r\n  TOGGLE_COMPLETED,\r\n  TOGGLE_IMPORTANT,\r\n  FILTER_CHANGE,\r\n  SEARCH\r\n} from '../constants';\r\n\r\nexport const addTask = text => {\r\n  return {\r\n    type: ADD_TASK,\r\n    payload: {\r\n      id: Date.now(),\r\n      text: text,\r\n      isCompleted: false,\r\n      important: false\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteTask = id => {\r\n  return {\r\n    type: DELETE_TASK,\r\n    id\r\n  };\r\n};\r\n\r\nexport const toggleCompleted = id => {\r\n  return {\r\n    type: TOGGLE_COMPLETED,\r\n    id\r\n  };\r\n};\r\n\r\nexport const toggleImportant = id => {\r\n  return {\r\n    type: TOGGLE_IMPORTANT,\r\n    id\r\n  };\r\n};\r\n\r\nexport const filterChange = filter => {\r\n  return {\r\n    type: FILTER_CHANGE,\r\n    filter\r\n  };\r\n};\r\n\r\nexport const search = text => {\r\n  return {\r\n    type: SEARCH,\r\n    text\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = ({\r\n  id,\r\n  text,\r\n  isCompleted,\r\n  important,\r\n  toggleImportant,\r\n  toggleCompleted,\r\n  deleteTask\r\n}) => {\r\n  let classNames = 'todoListItemText mr-auto';\r\n  if (isCompleted) classNames += ' isCompleted';\r\n  if (important) classNames += ' important';\r\n\r\n  return (\r\n    <div className='todoListItem d-flex align-items-center'>\r\n      <span className={classNames} onClick={() => toggleCompleted(id)}>\r\n        {text}\r\n      </span>\r\n      <span\r\n        className='btn btn-outline-success'\r\n        onClick={() => toggleImportant(id)}\r\n      >\r\n        <i className='fa fa-exclamation-circle' aria-hidden='true' />\r\n      </span>\r\n\r\n      <span className='btn btn-outline-danger' onClick={() => deleteTask(id)}>\r\n        <i className='fa fa-times-circle' aria-hidden='true' />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { toggleImportant, toggleCompleted, deleteTask } from '../../actions';\r\n\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\n\r\nimport './todo-list.css';\r\n\r\nclass TodoList extends Component {\r\n  filterTask = (tasks, filter) => {\r\n    switch (filter) {\r\n      case 'Active':\r\n        return tasks.filter(item => item.isCompleted === false);\r\n\r\n      case 'Complete':\r\n        return tasks.filter(item => item.isCompleted === true);\r\n\r\n      default:\r\n        return tasks;\r\n    }\r\n  };\r\n\r\n  search = (tasks, searchText) => {\r\n    if (searchText.length === 0) return tasks;\r\n\r\n    return tasks.filter(item => {\r\n      return item.text.toLowerCase().indexOf(searchText.toLowerCase()) > -1;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      tasks,\r\n      toggleImportant,\r\n      toggleCompleted,\r\n      deleteTask,\r\n      filter,\r\n      searchText\r\n    } = this.props;\r\n\r\n    const searchedTasks = this.search(tasks, searchText);\r\n\r\n    const tasksList = this.filterTask(searchedTasks, filter).map(item => {\r\n      const { id, text, isCompleted, important } = item;\r\n\r\n      return (\r\n        <li key={id} className='list-group-item'>\r\n          <TodoListItem\r\n            id={id}\r\n            text={text}\r\n            isCompleted={isCompleted}\r\n            important={important}\r\n            toggleImportant={toggleImportant}\r\n            toggleCompleted={toggleCompleted}\r\n            deleteTask={deleteTask}\r\n          />\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return <ul className='todoList list-group'>{tasksList}</ul>;\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    tasks: state.tasks,\r\n    filter: state.filters.filter,\r\n    searchText: state.search.searchText\r\n  }),\r\n  { toggleImportant, toggleCompleted, deleteTask }\r\n)(TodoList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addTask } from '../../actions';\r\n\r\nimport './panel-add-item.css';\r\n\r\nconst PanelAddItem = props => {\r\n  const [inputText, setInputText] = useState('');\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keypress', handleAddTask);\r\n    return () => {\r\n      document.removeEventListener('keypress', handleAddTask);\r\n    };\r\n  });\r\n\r\n  const handleAddTask = e => {\r\n    if (\r\n      ((e.type === 'keypress' && e.key === 'Enter') || e.type === 'click') &&\r\n      inputText.length > 1\r\n    ) {\r\n      props.addTask(inputText);\r\n      setInputText('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='input-group'>\r\n      <input\r\n        type='text'\r\n        className='form-control'\r\n        placeholder='New task'\r\n        onChange={({ target: { value } }) => setInputText(value)}\r\n        value={inputText}\r\n      />\r\n      <div className='input-group-append'>\r\n        <input\r\n          type='button'\r\n          className='btn btn-info'\r\n          value='Add'\r\n          onClick={handleAddTask}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addTask }\r\n)(PanelAddItem);\r\n","import React from 'react';\n\nimport Header from '../header/header';\nimport SearchPanel from '../search-panel/search-panel';\nimport TodoList from '../todo-list/todo-list';\nimport PanelAddItem from '../panel-add-item/panel-add-item';\n\nimport './app.css';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className='app'>\n        <Header />\n        <SearchPanel />\n        <TodoList />\n        <PanelAddItem />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './components/app/app';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}